namespace BundleTransformer.Closure
{
	/// <summary>
	/// JavaScript compilation options
	/// </summary>
	internal abstract class JsCompilationOptionsBase
	{
		/// <summary>
		/// Gets or sets a input and output charset.
		/// By default, accept UTF-8 as input and output US_ASCII.
		/// </summary>
		public string Charset
		{
			get;
			set;
		}

		/// <summary>
		/// Gets or sets a degree of compression and optimization to apply to your JavaScript.
		/// There are 3 possible compilation levels:
		/// WhitespaceOnly - just removes whitespace and comments from your JavaScript;
		/// Simple - performs compression and optimization that does not interfere with
		/// the interaction between the compiled JavaScript and other JavaScript.
		/// This level renames only local variables;
		/// Advanced - achieves the highest level of compression by renaming symbols in your
		/// JavaScript. When using this type of compilation you must perform extra steps
		/// to preserve references to external symbols.
		/// </summary>
		public CompilationLevel CompilationLevel
		{
			get;
			set;
		}

		/// <summary>
		/// Gets or sets a flag for whether to add line breaks and indentation to its
		/// output code to make the code easier for humans to read
		/// </summary>
		public bool PrettyPrint
		{
			get;
			set;
		}

		/// <summary>
		/// Gets or sets a flag for whether to perform additional optimizations based on available information
		/// </summary>
		public bool UseTypesForOptimization
		{
			get;
			set;
		}

		/// <summary>
		/// Gets or sets a severity level of errors:
		///		0 - only syntax error messages;
		///		1 - only syntax error messages and warnings generated by the optimization;
		///		2 - in addition to syntax errors and warnings generated by optimization
		///		passes, outputs warnings generated by selected code-checking passes;
		///		3 - in addition to syntax errors and warnings generated by optimization
		///		passes, outputs warnings generated by all code-checking passes.
		/// </summary>
		public int Severity
		{
			get;
			set;
		}


		/// <summary>
		/// Constructs a instance of the JavaScript compilation options
		/// </summary>
		protected JsCompilationOptionsBase()
		{
			Charset = string.Empty;
			CompilationLevel = CompilationLevel.Simple;
			PrettyPrint = false;
			UseTypesForOptimization = false;
			Severity = 0;
		}
	}
}